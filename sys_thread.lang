_asm_extern _CreateThread@24
_asm_extern _Sleep@4
_asm_extern _WaitForSingleObject@8

sys_thread 
{
	ref thread_handle;
	sys_thread()->none
	{
	}
	run() virtual ->int
	{
		return 0;
	}
	thread_fun(sys_thread obj) static stdcall ->int
	{
		int ret;
		try 
		{	
			ret = obj.run();
			return ret;
		}
		catch(native_sys_exception e)
	    {
			ret = -1;
			printany e.get_msg(), '\n';
		}
		return ret;
	}
	start()->none
	{
		 
		int CREATE_SUSPENDED;
		CREATE_SUSPENDED = 0x4;
		_asm
		{
			push 0
			push 0
			push %this
			push _sys_thread@thread_fun@sys_thread
			push 0
			push 0
			call _CreateThread@24
			mov %thread_handle, eax
		}
	}
	sleep(int milliseconds) static ->none
	{
		_asm
		{
			push %milliseconds
			call _Sleep@4
		}
	}
	wait(int milliseconds)->int
	{
		_asm
		{
			push %milliseconds
			push %thread_handle
			call _WaitForSingleObject@8
		}
	}
	
}